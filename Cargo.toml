[package]
name = "wall-a"
version = "0.1.1"
edition = "2021"

repository = "https://github.com/declanvk/wall-a"
description = "CLI tool for recording JSON in a compressed format"
rust-version = "1.78"
keywords = ["cli", "json", "merge"]
categories = ["command-line-utilities"]
license = "MIT OR Apache-2.0"

[dependencies]
anyhow = "1.0.86"
argh = "0.1.12"
crc32fast = "1.4.2"
glob = "0.3.1"
indexmap = "2.3.0"
itertools = "0.13.0"
jiff = "0.1.4"
minicbor = { version = "0.24.2", features = ["derive", "std"] }
serde = "1.0.204"
serde_json = { version = "1.0.122", features = ["preserve_order"] }
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
uom = { version = "0.36.0", default-features = false, features = [
    "std",
    "u64",
    "si",
] }
zerocopy = { version = "0.7.35", features = ["derive"] }
zstd = "0.13.2"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.19.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false
